// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.CarouselFull = (function() {
    function CarouselFull(ref) {
      this.ref = ref;
      this.onSliderMoved = __bind(this.onSliderMoved, this);
      this.onSwipe = __bind(this.onSwipe, this);
      this.onWaitTimeout = __bind(this.onWaitTimeout, this);
      this.onNavigatorBtnClick = __bind(this.onNavigatorBtnClick, this);
      this.onCounterBulletClick = __bind(this.onCounterBulletClick, this);
      this.carousel_ref = this.ref.find('.carousel');
      this.items = this.carousel_ref.find('> li');
      this.counter_ref = this.ref.find('.js-counter');
      this.navigator_ref = this.ref.find('.navigator');
      if (this.navigator_ref.length > 0) {
        this.prev_btn = this.navigator_ref.find('.previous');
        this.next_btn = this.navigator_ref.find('.next');
      }
      this.progress_ref = this.navigator_ref.find('.text-counter');
      if (this.progress_ref.length > 0) {
        this.progress_current = this.progress_ref.find('.current');
        this.progress_total = this.progress_ref.find('.total');
      }
      this.current = 0;
      this.duration = 1.5;
      this.wait_timeout = 0;
      this.wait_duration = 5000;
      this.is_enabled = true;
      this.setElements();
      this.has_counter = this.has_navigator = this.has_progress = this.has_autoplay = false;
      if (this.counter_ref.length > 0) {
        this.setCounter();
      }
      if (this.navigator_ref.length > 0) {
        this.setNavigator();
      }
      if (this.progress_ref.length > 0) {
        this.setProgress();
      }
      if (this.ref.hasClass('js-autoplay')) {
        this.setAutoPlay();
      }
      if (!is_mobile) {
        this.ref.bind('dragstart', (function(e) {
          return e.preventDefault();
        }));
      }
      if (this.ref.hasClass('js-swipe') && this.items.length > 1) {
        this.ref.swipe({
          swipe: this.onSwipe,
          threshold: 100,
          allowPageScroll: 'vertical'
        });
      }
    }

    CarouselFull.prototype.setElements = function() {
      var first_item, i, item, last_item, _i, _ref;
      this.carousel_ref.css({
        width: "" + (this.items.length * 100) + "%"
      });
      for (i = _i = 0, _ref = this.items.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        item = $(this.items[i]);
        item.css({
          width: "" + (100 / this.items.length) + "%"
        });
      }
      first_item = $(this.items[0]).clone();
      this.carousel_ref.append(first_item);
      last_item = $(this.items[this.items.length - 1]).clone();
      last_item.insertBefore($(this.items[0]));
      return this.carousel_ref.css({
        left: '-100%'
      });
    };

    CarouselFull.prototype.setCounter = function() {
      var bullet, bullets, i, link, _i, _ref, _results;
      bullets = this.counter_ref.find('li');
      if (bullets.length < 2) {
        return this.counter_ref.hide();
      } else {
        this.has_counter = true;
        _results = [];
        for (i = _i = 0, _ref = bullets.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          bullet = $(bullets[i]);
          bullets.bind('click', this.onCounterBulletClick);
          link = bullet.find('a');
          _results.push(link.bind('click', (function(e) {
            return e.preventDefault();
          })));
        }
        return _results;
      }
    };

    CarouselFull.prototype.onCounterBulletClick = function(e) {
      var delta, index;
      e.preventDefault();
      if (this.is_enabled) {
        index = $(e.currentTarget).index();
        if (index !== this.current) {
          delta = index - this.current;
          return this.moveSlider(delta);
        }
      }
    };

    CarouselFull.prototype.setNavigator = function() {
      var _this = this;
      if (this.items.length > 1 && this.prev_btn.length > 0 && this.next_btn.length > 0) {
        this.has_navigator = true;
        this.prev_btn.bind('click', (function(e) {
          return _this.onNavigatorBtnClick(e, -1);
        }));
        return this.next_btn.bind('click', (function(e) {
          return _this.onNavigatorBtnClick(e, 1);
        }));
      } else {
        return this.navigator_ref.hide();
      }
    };

    CarouselFull.prototype.onNavigatorBtnClick = function(e, dir) {
      e.preventDefault();
      if (this.is_enabled && !$(e.currentTarget).hasClass('disabled')) {
        return this.moveSlider(dir);
      }
    };

    CarouselFull.prototype.setProgress = function() {
      if (this.progress_current.length > 0 && this.progress_total.length > 0) {
        this.has_progress = true;
        this.progress_current.text(this.current + 1);
        return this.progress_total.text(this.items.length);
      }
    };

    CarouselFull.prototype.setAutoPlay = function() {
      if (this.items.length > 1) {
        this.has_autoplay = true;
        return this.startAutoPlay();
      }
    };

    CarouselFull.prototype.startAutoPlay = function() {
      return this.wait_timeout = window.setTimeout(this.onWaitTimeout, this.wait_duration);
    };

    CarouselFull.prototype.stopAutoPlay = function() {
      return window.clearTimeout(this.wait_timeout);
    };

    CarouselFull.prototype.onWaitTimeout = function() {
      if (this.is_enabled) {
        return this.moveSlider(1);
      }
    };

    CarouselFull.prototype.onSwipe = function(event, direction) {
      var dir;
      if (this.is_enabled) {
        dir = direction === 'left' ? 1 : direction === 'right' ? -1 : void 0;
        return this.moveSlider(dir);
      }
    };

    CarouselFull.prototype.moveSlider = function(delta) {
      this.is_enabled = false;
      if (this.has_counter) {
        this.counter_ref.find('li a.active').toggleClass('active');
      }
      if (this.has_navigator) {
        this.navigator_ref.find('li a.disabled').toggleClass('disabled');
      }
      if (this.has_autoplay) {
        this.stopAutoPlay();
      }
      this.current = this.current + delta;
      return TweenLite.to(this.carousel_ref, this.duration, {
        css: {
          'left': "" + (-100 * (this.current + 1)) + "%"
        },
        ease: Power4.easeInOut,
        onComplete: this.onSliderMoved
      });
    };

    CarouselFull.prototype.onSliderMoved = function() {
      if (this.current === this.items.length) {
        this.current = 0;
        this.carousel_ref.css({
          left: '-100%'
        });
      } else if (this.current === -1) {
        this.current = this.items.length - 1;
        this.carousel_ref.css({
          left: "" + (-100 * (this.current + 1)) + "%"
        });
      }
      if (this.has_counter) {
        this.counter_ref.find("li:eq(" + this.current + ") a").toggleClass('active');
      }
      if (this.has_navigator) {
        if (this.current === 0) {
          this.prev_btn.addClass('disabled');
        } else if (this.current === this.items.length - 1) {
          this.next_btn.addClass('disabled');
        }
      }
      if (this.has_progress) {
        this.progress_current.text(this.current + 1);
      }
      if (this.has_autoplay) {
        this.startAutoPlay();
      }
      return this.is_enabled = true;
    };

    return CarouselFull;

  })();

}).call(this);
