// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Columnist = (function() {
    function Columnist(ref) {
      this.ref = ref;
      this.onResize = __bind(this.onResize, this);
      this.onImageLoaded = __bind(this.onImageLoaded, this);
      this.cols = parseInt(this.ref.attr('data-columns')) || 3;
      this.items = this.ref.find('div .block');
      this.images = this.ref.find('img');
      this.loaded = 0;
      this.is_ready = false;
      this.list = this.ref.find('.news-list');
      this.threshold = 800;
      this.preloadImages();
    }

    Columnist.prototype.preloadImages = function() {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.images.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.setPreloader($(this.images[i]).attr('src')));
      }
      return _results;
    };

    Columnist.prototype.setPreloader = function(url) {
      var preloader;
      preloader = new Image();
      preloader.onload = this.onImageLoaded;
      return preloader.src = url;
    };

    Columnist.prototype.onImageLoaded = function() {
      this.loaded++;
      if (this.loaded === this.images.length) {
        this.duplicateItems();
        this.setItems();
        return this.is_ready = true;
      }
    };

    Columnist.prototype.duplicateItems = function() {
      this.list_copy = this.list.clone();
      this.list_copy.addClass('c-right');
      this.ref.append(this.list_copy);
      return this.items_copy = this.list_copy.find('.block');
    };

    Columnist.prototype.setItems = function() {
      var w;
      w = $(window).width();
      if (w > this.threshold) {
        return this.setDoubleColumns();
      } else {
        return this.setSingleColumn();
      }
    };

    Columnist.prototype.setSingleColumn = function() {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.items.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        ($(this.items[i])).show();
        _results.push(($(this.items_copy[i])).hide());
      }
      return _results;
    };

    Columnist.prototype.setDoubleColumns = function() {
      var i, item, item_copy, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.items.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        item = $(this.items[i]);
        item_copy = $(this.items_copy[i]);
        if (i % 2 === 0) {
          item.show();
          _results.push(item_copy.hide());
          // FIXED
          item_copy.remove();
        } else {
          item.hide();
          // FIXED
          item.remove();

          _results.push(item_copy.show());
        }
      }
      return _results;
    };

    Columnist.prototype.onResize = function() {
      if (this.is_ready) {
        return this.setItems();
      }
    };

    return Columnist;

  })();

}).call(this);
