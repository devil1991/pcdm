// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.CollectionDetails = (function() {
    function CollectionDetails(ref, id_array, is_dev) {
      this.ref = ref;
      console.log(this.ref);
      this.id_array = id_array;
      this.is_dev = is_dev;
      this.onResize = __bind(this.onResize, this);
      this.onContentsRemoved = __bind(this.onContentsRemoved, this);
      this.removeContents = __bind(this.removeContents, this);
      this.onBackClick = __bind(this.onBackClick, this);
      this.renderContents = __bind(this.renderContents, this);
      this.onDataError = __bind(this.onDataError, this);
      this.onDataLoaded = __bind(this.onDataLoaded, this);
      this.updateContents = __bind(this.updateContents, this);
      this.onNextClick = __bind(this.onNextClick, this);
      this.onPrevClick = __bind(this.onPrevClick, this);
      this.loader = this.ref.siblings('.loader');
      this.img = this.ref.find('.img-detail');
      this.number_txt = this.ref.find('.wrap-text .number');
      this.collection_txt = this.ref.find('.wrap-text .collection');
      this.title_txt = this.ref.find('.wrap-text .title');
      this.description_txt = this.ref.find('.wrap-text .description');
      this.prev_btn = this.ref.find('a.previous');
      this.next_btn = this.ref.find('a.next');
      this.back_btn = this.ref.find('a.back');
      this.callback_url = this.ref.attr('data-callback');
      this.sharing_id = this.ref.find('.js-sharing').attr('id');
      this.current_id;
      this.data = {};
      this.img_ratio;
      this.setInteractions();
      event_emitter.addListener('IMAGE_LOADED', this.renderContents);
    }

    CollectionDetails.prototype.setInteractions = function() {
      this.prev_btn.bind('click', this.onPrevClick);
      this.next_btn.bind('click', this.onNextClick);
      return this.back_btn.bind('click', this.onBackClick);
    };

    CollectionDetails.prototype.onPrevClick = function(e) {
      var btn;
      e.preventDefault();
      btn = $(e.currentTarget);
      if (!btn.hasClass('disabled')) {
        return this.updateDetails(-1);
      }
    };

    CollectionDetails.prototype.onNextClick = function(e) {
      var btn;
      e.preventDefault();
      btn = $(e.currentTarget);
      if (!btn.hasClass('disabled')) {
        return this.updateDetails(1);
      }
    };

    CollectionDetails.prototype.updateDetails = function(dir) {
      var id;
      if (!is_switching) {
        window.is_switching = true;
        id = this.id_array[this.getCurrentIndex() + dir];
        return event_emitter.emitEvent('UPDATE_DETAILS', [id]);
      }
    };

    CollectionDetails.prototype.getCurrentIndex = function() {
      var i, index, _i, _ref;
      index = 0;
      for (i = _i = 0, _ref = this.id_array.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (this.id_array[i] === this.current_id) {
          index = i;
        }
      }
      return index;
    };

    CollectionDetails.prototype.updateContents = function(id) {
      this.current_id = id;
      this.checkButtons();
      this.unloadContents();
      this.ref.css({
        visibility: 'hidden'
      });
      this.ref.show();
      this.loader.show();
      return this.loadData();
    };

    CollectionDetails.prototype.checkButtons = function() {
      var index;
      index = this.getCurrentIndex();
      if (index === 0) {
        this.prev_btn.addClass('disabled');
        if (this.next_btn.hasClass('disabled')) {
          return this.next_btn.removeClass('disabled');
        }
      } else if (index === this.id_array.length - 1) {
        if (this.prev_btn.hasClass('disabled')) {
          this.prev_btn.removeClass('disabled');
        }
        return this.next_btn.addClass('disabled');
      } else {
        if (this.prev_btn.hasClass('disabled')) {
          this.prev_btn.removeClass('disabled');
        }
        if (this.next_btn.hasClass('disabled')) {
          return this.next_btn.removeClass('disabled');
        }
      }
    };

    CollectionDetails.prototype.unloadContents = function() {
      return this.img.attr('src', '');
    };

    CollectionDetails.prototype.loadData = function() {
      var data_path;
      if (this.is_dev) {
        data_path = '../public/json/product_details.json';
        return $.getJSON(data_path, this.onDataLoaded);
      } else {
        return $.ajax({
          type: 'POST',
          url: '/wp-admin/admin-ajax.php',
          data: {
            action: 'product_details',
            product_id: this.current_id
          },
          success: this.onDataLoaded,
          error: this.onDataError
        });
      }
    };

    CollectionDetails.prototype.onDataLoaded = function(json) {
      var src;
      this.data = json.details;
      src = is_smartphone ? this.data.img_mobile : this.data.img;
      return this.loadImage(src);
    };

    CollectionDetails.prototype.onDataError = function() {};

    CollectionDetails.prototype.loadImage = function(src) {
      var preloader;
      this.img.attr('src', src);
      preloader = new Image();
      preloader.onload = this.onImageLoaded;
      return preloader.src = src;
    };

    CollectionDetails.prototype.onImageLoaded = function() {
      var ratio;
      ratio = this.width / this.height;
      return event_emitter.emitEvent('IMAGE_LOADED', [ratio]);
    };

    CollectionDetails.prototype.renderContents = function(img_ratio) {
      this.img_ratio = img_ratio;
      this.loader.hide();
      this.number_txt.html(this.data.number);
      this.collection_txt.html(this.data.collection);
      this.ref.removeClass("right bottom");
      this.ref.addClass(this.data.type);
      if(this.ref.hasClass('bottom') && $(window).width()>992)
        this.ref.height($(window).height());
      this.title_txt.html(this.data.title);
      this.description_txt.html(this.data.description);
      event_emitter.emitEvent('UPDATE_SHARING_DATA', [this.sharing_id, this.data.sharing]);
      this.onResize();
      this.ref.css({
        opacity: '0',
        visibility: 'visible'
      });
      TweenLite.to(this.ref, 1, {
        css: {
          'opacity': '1'
        },
        ease: Power4.easeInOut
      });
      return window.is_switching = false;
    };

    CollectionDetails.prototype.onBackClick = function(e) {
      e.preventDefault();
      if (!is_switching) {
        window.is_switching = true;
        return event_emitter.emitEvent('SWITCH_TO_GRID');
      }
    };

    CollectionDetails.prototype.removeContents = function() {
      return TweenLite.to(this.ref, 1, {
        css: {
          'opacity': '0'
        },
        ease: Power4.easeInOut,
        onComplete: this.onContentsRemoved
      });
    };

    CollectionDetails.prototype.onContentsRemoved = function() {
      this.ref.hide();
      return event_emitter.emitEvent('DETAILS_HIDDEN', [this.current_id]);
    };

    CollectionDetails.prototype.onResize = function(window_w, window_h) {};

    return CollectionDetails;

  })();

}).call(this);
